"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UserService = void 0;
/**
 * This file is generated by the RequestConfigGenerator.
 * Do not edit.
 */
const http_request_1 = require("@gopowerteam/http-request");
const user_controller_1 = require("../controller/user.controller");
class UserService {
    /**
     * 添加患者信息绑定
     */
    addPatient(requestParams) {
        return requestParams.request();
    }
    /**
     * 修改用户可编辑项目
     */
    changProfile(requestParams) {
        return requestParams.request();
    }
    /**
     * 使用ID查询
     */
    getById(requestParams) {
        return requestParams.request();
    }
    /**
     * 获取当前登录用户信息
     */
    getMineUser(requestParams) {
        return requestParams.request();
    }
    /**
     * 使用UnionId登录
     */
    loginByUnionId(requestParams) {
        return requestParams.request();
    }
    /**
     * 发送绑定验证码
     */
    sendBindingVerificationCode(requestParams) {
        return requestParams.request();
    }
    /**
     * 验证手机号/验证码
     */
    verificationBindingCode(requestParams) {
        return requestParams.request();
    }
}
__decorate([
    http_request_1.Request({
        server: user_controller_1.UserController.addPatient
    })
], UserService.prototype, "addPatient", null);
__decorate([
    http_request_1.Request({
        server: user_controller_1.UserController.changProfile
    })
], UserService.prototype, "changProfile", null);
__decorate([
    http_request_1.Request({
        server: user_controller_1.UserController.getById
    })
], UserService.prototype, "getById", null);
__decorate([
    http_request_1.Request({
        server: user_controller_1.UserController.getMineUser
    })
], UserService.prototype, "getMineUser", null);
__decorate([
    http_request_1.Request({
        server: user_controller_1.UserController.loginByUnionId
    })
], UserService.prototype, "loginByUnionId", null);
__decorate([
    http_request_1.Request({
        server: user_controller_1.UserController.sendBindingVerificationCode
    })
], UserService.prototype, "sendBindingVerificationCode", null);
__decorate([
    http_request_1.Request({
        server: user_controller_1.UserController.verificationBindingCode
    })
], UserService.prototype, "verificationBindingCode", null);
exports.UserService = UserService;
